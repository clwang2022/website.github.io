install.packages("pacman")
require(pacman)
library(pacman)
detach("package:datasets", unload=true)
library(datasets)
head(iris)
plot(iris$Species)
plot(iris$Petal.Length)
plot(iris$Species, iris$Sepal.Width)
plot(iris$Petal.Length, iris$Petal.Width)
plot(iris)
plot(iris$Petal.Length, iris$Petal.Width,
     col="#cc0000",
     pch=19,
     main = "Iris: Petal length vs. Petal width",
     xlab = "Petal Length",
     ylab = "Pedal Width")
plot(cos, 0, 2*pi)
plot(exp, 1,5)
plot(dnorm, -3, 3)
library(datasets)
?mtcars
head(mtcars)
barplot(mtcars$cyl)
cylinders<-table(mtcars$cyl)
barplot(cylinders)
plot(cylinders)
library(datasets)
?iris
head(iris)
hist(iris$Sepal.Length)
hist(iris$Sepal.Width)
hist(iris$Petal.Length)
hist(iris$Petal.Width)
par(mfrow=c(3,1))
hist(iris$Petal.Width [iris$Species == "setosa"],
     xlin = c(0,3),
     breaks = 9,
     main="Petal width for Setosa",
     xlab ="",
     col="red")
library(datasets)
head(mtcars)
hist(mtcars$wt)
hist(mtcars$mpg)
plot(mtcars$wt, mtcars$mpg)
plot(mtcars$wt,mtcars$mpg, 
pch=19, 
cex=1.5, 
col="#cc0000", 
main="MPG as Function of Weight of Cars", 
xlab = "Weight (in 1000 pounds)", 
ylab="MPG")
library(datasets)
head(lynx)
hist(lynx)
hist(lynx, breaks = 14, freq = FALSE, col = "thistle", main = paste("Histogram of Annual Canadian Lynx", "Trappings, 1821-1934"), xlab = "Number of Lynx Trapped")
curve(dnorm(x, mean = mean(lynx), sd=sd(lynx)),col="thistle4", lwd=2, add=TRUE)
lines(density(lynx), col="blue", lwd=2)
lines(density(lynx, adjust = 3), col="purple", lwd=2)
rug(lynx, lwd = 2,col = "gray")
detach("packages:datasets", unload = True)
?detach
library(datasets)
head(iris)
summary(iris$Species)
summary(iris$Sepal.Length)
summary(iris)
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr)
library(datasets)
head(iris)
p_load(psych)
p_help(psych)
p_help(psych, web = F)
describe(iris$Sepal.Length)
describe(iris)
n1<-15
n1
typeof(n1)
n2<-1.5
typeof(n2)
C1<-"C"
C1
typeof(C1)
v1<- c(1,2,3,4,5)
v1
is.vector(v1)
m1<- matrix(c(T,T,F,F,T,F), nrow=2)
m1
m2<-matrix(c("a", "b", "c", "d"), nrow=2, byrow = T)
m2
a1<-array(c(1:24), c(4,3,2))
a1
vNumeric <- c(1,2,3)
vCharacter <- c("a","b","c")
vlogical <- c(T,F,T)
dfa<-cbind(vNumeric,vCharacter,vlogical)
dfa
df<-as.data.frame(cbind(vNumeric,vCharacter,vlogical))
o1<-c(1,2,3)
o2<-c("a","b","c","d")
o3<-c(T,F,T,T,F)
list1<-list(o1,o2,o3)
list1
list2<-list(o1,o2,o3,list1)
list2
(coer1<-c(1,"b",TRUE))
typeof(coer1)
(coerce2<-2)
typeof(coerce2)
(coerce3<-as.integer(2))
typeof(coerce3)
(coerce6<-matrix(1:9, nrow = 3))
is.matrix(coerce6)  
?matrix
(x1<-1:3)
(y<-1:9)
(df1<-cbind.data.frame(x1,y))
typeof(df1$x1)
str(df1)
x4<-c(1:3)
df4<-cbind.data.frame(x4,y)
df4$x4<-factor(df4$x4, levels=c(1,2,3), labels=c("macOS", "Windows", "Linux"))
df4
typeof(df4$x4)
x1<-1:10
x1
x2<-10:0
x2
?seq
(S3<-seq(10))
?scan
install.packages("rio")
pacman::p_load(rio)
rio_csv <- import ("C:/Users/wclzsdkjdx/Desktop/CourseFiles/ImportingData_Datasets/mbb.csv")
?pacman::p_load
head(rio_csv)
View(rio_csv)
rio_txt <- import ("C:/Users/wclzsdkjdx/Desktop/CourseFiles/ImportingData_Datasets/mbb.txt", header=TRUE, sep="\t")
?pacman::p_load
?levels
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr)
library(datasets)
cars<-mtcars[, c(1:4,6:7,9:11)]
head(cars)
hc<-cars %>%
dist %>%
hclust
plot(hc)
rect.hclust(hc, k=2, border = "gray")
rect.hclust(hc, k=3, border = "blue")
rect.hclust(hc, k=4, border = "red")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr)
library(datasets)
cars<-mtcars[, c(1:4,6:7,9:11)]
head(cars)
pc<-prcomp(cars, center = TRUE, scale = TRUE)
pc<-prcomp(~mpg+cyl+disp+hp+wt+qsec+am+gear+carb, data = mtcars, center=TRUE, scale=TRUE)
summary(pc)
plot(pc)
pc
predict(pc)%>%round(2)
biplot(pc)
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr)
library(datasets)
head(USJudgeRatings)
data<-USJudgeRatings
x<-as.matrix(data[-12])
y<-data[,12]
reg1<-lm(y~x)
reg1<-lm(RTEN~CONT+INTG+DMNR+DILG+CFMG+DECI+PREP+FAMI+ORAL+WRIT+PHYS, data=USJudgeRatings)
confint(reg1)
hist(residuals(reg1))
p_load(lars,caret)
?lars
?caret
stepwise<-lars(x,y,type="stepwise")
forward<-lars(x,y,type = "forward.stagewise")
lar<-lars(x, y, type="lar")
lasso<-lars(x,y,type="lasso")
r2comp<-c(stepwise$R2[6],forward$R2[6], lar$R2[6], lasso$R2[6]%>%round(2))
names(r2comp) <- c("stepwise", "forward", "lar", "lasso")
r2comp
?rm
rm(list=ls())
